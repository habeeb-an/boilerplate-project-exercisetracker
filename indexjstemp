/* const express = require('express')
const app = express()
const cors = require('cors')
require('dotenv').config()
const bodyparser=require('body-parser')

app.use(bodyparser.urlencoded({extended:true}))
app.use(bodyparser.json())

const mongoose = require('mongoose');
mongoose.connect(process.env.MONGO_URI, {
   useNewUrlParser: true,
   useUnifiedTopology: true
});

const {Schema}=mongoose
const userSchema=new Schema({
  username:{type:String}
})
const exerciseSchema=new Schema({
  userId:{type:String,required:true},
  description:String,
  duration:Number,
  date:Date
})

const User=mongoose.model("User",userSchema)
const Exercise=mongoose.model("Exercise",exerciseSchema)


app.use(cors())
app.use(express.static('public'))
app.get('/', (req, res) => {
  res.sendFile(__dirname + '/views/index.html')
});
//APi

app.post("/api/users",(req,res)=>{
  console.log("req.body",req.body)
  const newUser=new User({
    username:req.body.username
  })

  newUser.save((err,data)=>{
    if(err ||!data) return console.log(err)
    else{
      res.json(data)
    }
  })
})
//2nd post
app.post('/api/users/:_id/exercises',(req,res)=>{
  console.log(`req,body`,req.body);
  console.log('req.params',req.params);
  const _id=req.params._id;
  const {description, duration, date}=req.body
  User.findById(_id,(err,userData)=>{
    if( err|| !userData) {
    res.send('coundnt find any data');
    }
    else {
      const newExercise =new Exercise({
        userId: _id,
        description,
        duration,
        date:new Date(date),
      })
      newExercise.save((err,data)=>{
        if(err||!data){
          res.send("error during save")}
          else{
            res.json({
              username:userData.username,
              description,
              duration,
              date: date.toDateString(),
              _id: userData._id
            })
          }
        })
      }
    })
  })

*/

